прописывать все api поинты 


Старт: начинай с модульного моналита (или «монолит с выделенным auth-модулем»), реализованного по принципам Clean Architecture (usecases/domain/repositories/delivery). Это даёт быстрый запуск с чистыми слоями и минимальной инфраструктурой. 

Проектируй с выходом в сервис: внутри модуля держи чёткие интерфейсы (контракты) для репозиториев и для API — чтобы позднее можно было вытащить модуль в отдельный

1)Авторизация

 Эндпоинт             Назначение                                                                  метод                
/api/auth/register - Регистрация пользователя (создаёт нового пользователя, хэширует пароль) - post                           
/api/auth/login - Вход (проверяет логин и пароль) - post                 
/api/auth/logout - Выход (удаляет/аннулирует логин и пароль) - post 
/api/auth/refresh - Обновление токена (выдаёт новый access токен по refresh токену) - post                                  
/api/auth/validate - Проверка токена (проверяет, действителен ли access токен) - get
/api/auth/revoke - Отзыв токена (принудительное завершение сессии,например админом) - post

2)Пользователи 
                               
/api/users/getAll - список пользователей(только для администраторов) - get
/api/users/{id} - информация о пользователе (возвращает профиль конкретного пользователя) - get
/api/users/me - профиль текущего пользователя - get
/api/users/{id} - обновление профиля (изменение данных пользователя) - put 
/api/users/{id} - удаление пользователя(админ или сам пользователь) - delete 
/api/users/{id}/roles  Изменение ролей(управление правами (admin, user и т.д.)) - patch

3)Права и роли 

/api/roles - получить список всех ролей - get 
/api/roles - создать новую роль - post
/api/roles/{id} - обновить роль - put
/api/roles/{id} - удалить роль - delete
/api/roles/{id}/permissions -привязать или удалить права у роли - patch

4) Мониторинг системы 

/api/health - проверка состояния API - get                       
/api/version - версия API - get                                   


                       
